// Vcalendar.dart  (no intl dependency)
import 'package:flutter/material.dart';

const Color kPrimaryDark = Color.fromARGB(255, 24, 42, 94); // dark blue
const Color kApproved = Color(0xFF2ECC71); // green
const Color kPending  = Color(0xFFE1B12C); // mustard yellow
const Color kHoliday  = Color(0xFFE74C3C); // red
const Color kBorder   = Color(0xFFCFD6DE);
const Color kGreyBg   = Color(0xFFF2F3F7);

class VCalendarPage extends StatefulWidget {
  const VCalendarPage({super.key});
  @override
  State<VCalendarPage> createState() => _VCalendarPageState();
}

class _VCalendarPageState extends State<VCalendarPage> {
  // Use a long-running page controller so swipes can go far back/forward
  final PageController _pageController = PageController(initialPage: 120);
  DateTime _baseMonth = DateTime(DateTime.now().year, DateTime.now().month, 1);

  // Dummy status data (just for demo)
  final approvedDays = {5, 14, 22};
  final pendingDays  = {9, 18};
  final holidayDays  = {25};

  static const _monthNames = <String>[
    'January','February','March','April','May','June',
    'July','August','September','October','November','December'
  ];

  DateTime _monthForPage(int page) {
    // pageOffset = currentPage - initialPage (120)
    final offset = page - 120;
    return DateTime(_baseMonth.year, _baseMonth.month + offset, 1);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: kGreyBg,
      appBar: AppBar(
        backgroundColor: kPrimaryDark,
        elevation: 0,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back_ios_new_rounded, color: Colors.white),
          onPressed: () => Navigator.pop(context),
        ),
        title: const Text('Vehicle',
            style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
        // (removed calendar symbol as requested)
      ),
      body: SafeArea(
        child: Column(
          children: [
            // Calendar card
            Container(
              margin: const EdgeInsets.all(12),
              padding: const EdgeInsets.fromLTRB(12, 16, 12, 20),
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.circular(18),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.06),
                    blurRadius: 8,
                    offset: const Offset(0, 3),
                  ),
                ],
              ),
              child: Column(
                children: [
                  // Swipeable month header + grid
                  SizedBox(
                    height: 300, // header + weekdays + grid
                    child: PageView.builder(
                      controller: _pageController,
                      onPageChanged: (_) => setState(() {}),
                      itemBuilder: (context, page) {
                        final month = _monthForPage(page);
                        return Column(
                          children: [
                            _monthHeader(month),
                            const SizedBox(height: 8),
                            _weekHeader(),
                            const SizedBox(height: 8),
                            _monthGrid(month),
                          ],
                        );
                      },
                    ),
                  ),
                ],
              ),
            ),

            // Location strip
            Container(
              margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 14),
              padding: const EdgeInsets.symmetric(vertical: 14),
              decoration: BoxDecoration(
                color: const Color(0xFFE9EDF3),
                borderRadius: BorderRadius.circular(8),
              ),
              alignment: Alignment.center,
              child: const Text(
                'PERKESO JALAN AMPANG',
                style: TextStyle(
                  color: Color(0xFF2E3A59),
                  fontWeight: FontWeight.bold,
                  letterSpacing: 0.7,
                ),
              ),
            ),

            // Booking list (dummy)
            _bookingTile(
              name: 'SHERA',
              vehicle: 'Toyota Vellfire',
              time: '10:00 AM – 3:00 PM',
              status: 'APPROVED',
              color: kApproved,
            ),
            _bookingTile(
              name: 'AMIRUL',
              vehicle: 'Nissan Serena',
              time: '2:00 PM – 5:00 PM',
              status: 'PENDING',
              color: kPending,
            ),
            _bookingTile(
              name: 'PUBLIC HOLIDAY',
              vehicle: '—',
              time: 'Full Day',
              status: 'HOLIDAY',
              color: kHoliday,
            ),
          ],
        ),
      ),
    );
  }

  // ----- Pieces -----

  Widget _monthHeader(DateTime month) {
    final title = '${_monthNames[month.month - 1]} ${month.year}';
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        IconButton(
          icon: const Icon(Icons.arrow_back_ios_new_rounded, size: 18),
          color: kPrimaryDark,
          onPressed: () {
            _pageController.previousPage(
              duration: const Duration(milliseconds: 200), curve: Curves.easeOut);
          },
        ),
        Text(title,
            style: const TextStyle(
              fontSize: 16, fontWeight: FontWeight.bold, color: Color(0xFF2E3A59))),
        IconButton(
          icon: const Icon(Icons.arrow_forward_ios_rounded, size: 18),
          color: kPrimaryDark,
          onPressed: () {
            _pageController.nextPage(
              duration: const Duration(milliseconds: 200), curve: Curves.easeOut);
          },
        ),
      ],
    );
  }

  Widget _weekHeader() {
    const days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: days.map((d) => Expanded(
        child: Center(
          child: Text(d, style: const TextStyle(
            color: Color(0xFF8B97A6), fontWeight: FontWeight.bold, fontSize: 13))),
      )).toList(),
    );
  }

  Widget _monthGrid(DateTime month) {
    final daysInMonth = DateUtils.getDaysInMonth(month.year, month.month);
    final firstWeekday = DateTime(month.year, month.month, 1).weekday % 7; // Sun=0
    final totalCells = ((firstWeekday + daysInMonth + 6) ~/ 7) * 7; // full weeks

    return GridView.builder(
      physics: const NeverScrollableScrollPhysics(),
      shrinkWrap: true,
      itemCount: totalCells,
      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 7, crossAxisSpacing: 8, mainAxisSpacing: 8),
      itemBuilder: (_, i) {
        final day = i - firstWeekday + 1;
        if (day < 1 || day > daysInMonth) {
          return const SizedBox();
        }

        Color? bg;
        if (approvedDays.contains(day)) bg = kApproved;
        if (pendingDays.contains(day))  bg = kPending;
        if (holidayDays.contains(day))  bg = kHoliday;

        return Container(
          decoration: BoxDecoration(
            color: bg ?? Colors.transparent,
            borderRadius: BorderRadius.circular(8),
            border: Border.all(color: kBorder, width: 1),
          ),
          alignment: Alignment.center,
          child: Text(
            '$day',
            style: TextStyle(
              color: bg != null ? Colors.white : const Color(0xFF2E3A59),
              fontWeight: FontWeight.w700,
            ),
          ),
        );
      },
    );
  }

  Widget _bookingTile({
    required String name,
    required String vehicle,
    required String time,
    required String status,
    required Color color,
  }) {
    return Container(
      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 14),
      decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(10)),
      child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
        Row(children: [
          Expanded(child: Text(name,
              style: const TextStyle(
                color: Color(0xFF2E5AAC), fontWeight: FontWeight.bold, fontSize: 15))),
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
            decoration: BoxDecoration(color: color, borderRadius: BorderRadius.circular(18)),
            child: Text(status,
                style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
          ),
        ]),
        const SizedBox(height: 6),
        Text('$time • $vehicle',
            style: const TextStyle(color: Color(0xFF7A8899), fontSize: 13.5, fontWeight: FontWeight.w500)),
      ]),
    );
  }
}
